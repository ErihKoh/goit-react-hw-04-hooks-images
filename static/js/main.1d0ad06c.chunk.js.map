{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/SearchBar/SearchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","services/image-api.js","App.js","reportWebVitals.js","index.js","components/SearchBar/SearchBar.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","imageQuery","setImageQuery","className","s","SearchForm","event","preventDefault","trim","toast","error","SearchFormInput","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","SearchFormButton","SearchFormButtonLabel","ImageGalleryItem","images","onClick","map","image","ImageGalleryItemImage","src","webformatURL","data-image","largeImageURL","alt","id","ImageGallery","ButtonLoadMore","Button","modalRoot","document","querySelector","Modal","props","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","onClose","createPortal","Overlay","target","children","API_KEY","BASE_URL","api","fetchImage","currentPage","fetch","then","response","ok","json","Promise","reject","Error","App","setImages","setCurrentPage","largeImage","setLargetImages","isLoading","setIsloading","setError","options","imageApi","hits","scrollTo","top","body","scrollHeight","behavior","catch","finally","query","nodeName","dataset","color","height","width","length","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d0ad06c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__Bfhca\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3cNlM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1W1A6\",\"Modal\":\"Modal_Modal__332we\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3h0Sa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3QylH\"};","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\nimport s from './SearchBar.module.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [imageQuery, setImageQuery] = useState('');\r\n\r\n  const handleNameChange = event => {\r\n    setImageQuery(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (imageQuery.trim() === '') {\r\n      toast.error('Введите запрос.');\r\n      return;\r\n    }\r\n\r\n    onSubmit(imageQuery);\r\n    setImageQuery('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n          <input\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            name=\"imageQuery\"\r\n            value={imageQuery}\r\n            onChange={handleNameChange}\r\n          />\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n        </form>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  imageQuery: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nfunction ImageGalleryItem({ images, onClick }) {\r\n  return (\r\n    <>\r\n      {images.map(image => (\r\n        <li key={image.id} className={s.ImageGalleryItem} onClick={onClick}>\r\n          <img\r\n            className={s.ImageGalleryItemImage}\r\n            src={image.webformatURL}\r\n            data-image={image.largeImageURL}\r\n            alt=\"\"\r\n          />\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array,\r\n};\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from '../ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nfunction ImageGallery({ images, onClick }) {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      <ImageGalleryItem images={images} onClick={onClick} />\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n","import s from './Button.module.css';\r\n\r\nfunction ButtonLoadMore({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className={s.Button} onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ButtonLoadMore;\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal(props) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  });\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      props.onClose();\r\n      // console.log('escape');\r\n    }\r\n  };\r\n\r\n  const handleBbackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      props.onClose();\r\n      // console.log('backdrop');\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleBbackdropClick}>\r\n      <div className={s.Modal}>{props.children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n","const API_KEY = '18969292-6634fe46747360e3150bf5a1e';\r\nconst BASE_URL = `https://pixabay.com/api`;\r\n\r\nfunction fetchImage({ imageQuery = '', currentPage = 1 } = {}) {\r\n  return fetch(\r\n    `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${imageQuery}&page=${currentPage}&per_page=12&key=${API_KEY}`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(\r\n      new Error(`По вашему запросу ничего не найдено ${imageQuery}`),\r\n    );\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchImage,\r\n};\r\n\r\nexport default api;\r\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport SearchBar from './components/SearchBar';\nimport ImageGallery from './components/ImageGallery';\nimport ButtonLoadMore from './components/Button';\nimport Modal from './components/Modal';\nimport imageApi from './services/image-api';\nimport './App.css';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [imageQuery, setImageQuery] = useState('');\n  const [largeImage, setLargetImages] = useState('');\n  const [isLoading, setIsloading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (imageQuery === '') {\n      return;\n    }\n\n    // const fetchImage = () => {\n    const options = {\n      currentPage,\n      imageQuery,\n    };\n    setIsloading(true);\n    imageApi\n      .fetchImage(options)\n      .then(({ hits }) => setImages([...images, ...hits]))\n      .then(() => {\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => setError(error))\n      .finally(() => setIsloading(false));\n    // };\n\n    // fetchImage();\n  }, [currentPage, imageQuery]);\n\n  const onClickImage = e => {\n    e.preventDefault();\n    if (e.target.nodeName === 'IMG') {\n      setLargetImages(e.target.dataset.image);\n    }\n  };\n\n  const handleFormSubmit = query => {\n    setImageQuery(query);\n    setCurrentPage(1);\n    setImages([]);\n  };\n\n  const toggleModal = () => {\n    setLargetImages('');\n  };\n\n  return (\n    <div className=\"App\">\n      <SearchBar onSubmit={handleFormSubmit} />\n      <ImageGallery images={images} onClick={onClickImage} />\n      <div className=\"spinner\">\n        {isLoading && (\n          <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n      </div>\n      {images.length > 0 && (\n        <ButtonLoadMore onClick={() => setCurrentPage(currentPage + 1)} />\n      )}\n      {largeImage && (\n        <Modal onClose={toggleModal}>\n          <img src={largeImage} alt=\"modal\" />\n        </Modal>\n      )}\n      <ToastContainer autoClose={2000} />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  imageQuery: PropTypes.string,\n  images: PropTypes.array,\n  currentPage: PropTypes.number,\n  isLoading: PropTypes.bool,\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__1DBhN\",\"SearchForm\":\"SearchBar_SearchForm__1gnv9\",\"SearchFormButton\":\"SearchBar_SearchFormButton__1hOSl\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__2vPy1\",\"SearchFormInput\":\"SearchBar_SearchFormInput__3PeHA\"};"],"sourceRoot":""}